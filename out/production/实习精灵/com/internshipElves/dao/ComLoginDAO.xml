<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.internshipElves.dao.ComLoginDAO">
  <resultMap id="BaseResultMap" type="com.internshipElves.entity.ComLogin">
    <id column="com_login_id" jdbcType="INTEGER" property="comLoginId" />
    <result column="com_login_email" jdbcType="VARCHAR" property="comLoginEmail" />
    <result column="com_login_pwd" jdbcType="VARCHAR" property="comLoginPwd" />
    <result column="com_login_time" jdbcType="DATE" property="comLoginTime" />
    <result column="com_pre_login_time" jdbcType="DATE" property="comPreLoginTime" />
    <result column="com_login_status" jdbcType="INTEGER" property="comLoginStatus" />
    <result column="com_id" jdbcType="INTEGER" property="comId" />
    <result column="com_login_prepare_a" jdbcType="VARCHAR" property="comLoginPrepareA" />
    <result column="com_login_prepare_b" jdbcType="VARCHAR" property="comLoginPrepareB" />
  </resultMap>
  <sql id="Base_Column_List">
    com_login_id, com_login_email, com_login_pwd, com_login_time, com_pre_login_time, 
    com_login_status, com_id, com_login_prepare_a, com_login_prepare_b
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from com_login
    where com_login_id = #{comLoginId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from com_login
    where com_login_id = #{comLoginId,jdbcType=INTEGER}
  </delete>
  <insert id="save" parameterType="com.internshipElves.entity.ComLogin">
    insert into com_login (com_login_id, com_login_email, com_login_pwd, 
      com_login_time, com_pre_login_time, com_login_status, 
      com_id, com_login_prepare_a, com_login_prepare_b
      )
    values (#{comLoginId,jdbcType=INTEGER}, #{comLoginEmail,jdbcType=VARCHAR}, #{comLoginPwd,jdbcType=VARCHAR}, 
      #{comLoginTime,jdbcType=DATE}, #{comPreLoginTime,jdbcType=DATE}, #{comLoginStatus,jdbcType=INTEGER}, 
      #{comId,jdbcType=INTEGER}, #{comLoginPrepareA,jdbcType=VARCHAR}, #{comLoginPrepareB,jdbcType=VARCHAR}
      )
  </insert>

  <insert id="insert" parameterType="com.internshipElves.entity.ComLogin">
    insert into com_login (com_id,com_login_email, com_login_pwd,
    com_login_time, com_login_status
    )
    values (#{comId}, #{comLoginEmail,jdbcType=VARCHAR}, #{comLoginPwd,jdbcType=VARCHAR},
    #{comLoginTime,jdbcType=DATE}, #{comLoginStatus,jdbcType=INTEGER}
    )
  </insert>

  <insert id="insertSelective" parameterType="com.internshipElves.entity.ComLogin">
    insert into com_login
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="comLoginId != null">
        com_login_id,
      </if>
      <if test="comLoginEmail != null">
        com_login_email,
      </if>
      <if test="comLoginPwd != null">
        com_login_pwd,
      </if>
      <if test="comLoginTime != null">
        com_login_time,
      </if>
      <if test="comPreLoginTime != null">
        com_pre_login_time,
      </if>
      <if test="comLoginStatus != null">
        com_login_status,
      </if>
      <if test="comId != null">
        com_id,
      </if>
      <if test="comLoginPrepareA != null">
        com_login_prepare_a,
      </if>
      <if test="comLoginPrepareB != null">
        com_login_prepare_b,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="comLoginId != null">
        #{comLoginId,jdbcType=INTEGER},
      </if>
      <if test="comLoginEmail != null">
        #{comLoginEmail,jdbcType=VARCHAR},
      </if>
      <if test="comLoginPwd != null">
        #{comLoginPwd,jdbcType=VARCHAR},
      </if>
      <if test="comLoginTime != null">
        #{comLoginTime,jdbcType=DATE},
      </if>
      <if test="comPreLoginTime != null">
        #{comPreLoginTime,jdbcType=DATE},
      </if>
      <if test="comLoginStatus != null">
        #{comLoginStatus,jdbcType=INTEGER},
      </if>
      <if test="comId != null">
        #{comId,jdbcType=INTEGER},
      </if>
      <if test="comLoginPrepareA != null">
        #{comLoginPrepareA,jdbcType=VARCHAR},
      </if>
      <if test="comLoginPrepareB != null">
        #{comLoginPrepareB,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.internshipElves.entity.ComLogin">
    update com_login
    <set>
      <if test="comLoginEmail != null">
        com_login_email = #{comLoginEmail,jdbcType=VARCHAR},
      </if>
      <if test="comLoginPwd != null">
        com_login_pwd = #{comLoginPwd,jdbcType=VARCHAR},
      </if>
      <if test="comLoginTime != null">
        com_login_time = #{comLoginTime,jdbcType=DATE},
      </if>
      <if test="comPreLoginTime != null">
        com_pre_login_time = #{comPreLoginTime,jdbcType=DATE},
      </if>
      <if test="comLoginStatus != null">
        com_login_status = #{comLoginStatus,jdbcType=INTEGER},
      </if>
      <if test="comId != null">
        com_id = #{comId,jdbcType=INTEGER},
      </if>
      <if test="comLoginPrepareA != null">
        com_login_prepare_a = #{comLoginPrepareA,jdbcType=VARCHAR},
      </if>
      <if test="comLoginPrepareB != null">
        com_login_prepare_b = #{comLoginPrepareB,jdbcType=VARCHAR},
      </if>
    </set>
    where com_login_id = #{comLoginId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.internshipElves.entity.ComLogin">
    update com_login
    set com_login_email = #{comLoginEmail,jdbcType=VARCHAR},
      com_login_pwd = #{comLoginPwd,jdbcType=VARCHAR},
      com_login_time = #{comLoginTime,jdbcType=DATE},
      com_pre_login_time = #{comPreLoginTime,jdbcType=DATE},
      com_login_status = #{comLoginStatus,jdbcType=INTEGER},
      com_id = #{comId,jdbcType=INTEGER},
      com_login_prepare_a = #{comLoginPrepareA,jdbcType=VARCHAR},
      com_login_prepare_b = #{comLoginPrepareB,jdbcType=VARCHAR}
    where com_login_id = #{comLoginId,jdbcType=INTEGER}
  </update>



</mapper>